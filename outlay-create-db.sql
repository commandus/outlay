/******************************************************************************/
/***         Generated by IBExpert 2020.4.12.1 27.04.2020 12:02:41          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1251;

SET CLIENTLIB 'C:\Windows\System32\FBCLIENT.DLL';

CREATE DATABASE 'localhost/3050:D:\s\outlay\smeta.fdb'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET WIN1251 COLLATION WIN1251;



/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/

CREATE DOMAIN SADDRESS AS
VARCHAR(255);

CREATE DOMAIN SCODE AS
INTEGER;

CREATE DOMAIN SDATA AS
BLOB SUB_TYPE 0 SEGMENT SIZE 255;

CREATE DOMAIN SDESCRIPTION AS
VARCHAR(4096);

CREATE DOMAIN SID AS
BIGINT;

CREATE DOMAIN SINT AS
BIGINT;

CREATE DOMAIN SNAME AS
VARCHAR(1024);

CREATE DOMAIN SNUMBER AS
DOUBLE PRECISION;

CREATE DOMAIN STAG AS
VARCHAR(16);

CREATE DOMAIN STEXT AS
BLOB SUB_TYPE 1 SEGMENT SIZE 255;

CREATE DOMAIN STIMESTAMP AS
TIMESTAMP;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_PART_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_PART_ID TO 0;

CREATE GENERATOR GEN_PERSON_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_PERSON_ID TO 14;

CREATE GENERATOR GEN_REQUESTCURRENCYRATE_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_REQUESTCURRENCYRATE_ID TO 34;

CREATE GENERATOR GEN_REQUEST_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_REQUEST_ID TO 27;

CREATE GENERATOR GEN_SPECIFICATION_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_SPECIFICATION_ID TO 0;

CREATE GENERATOR GEN_VAT_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_VAT_ID TO 0;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE CATEGORY (
    NAME         SNAME NOT NULL,
    PARENT       SNAME DEFAULT '',
    DESCRIPTION  SDESCRIPTION
);

CREATE TABLE MEASUREUNIT (
    NAME      SNAME NOT NULL,
    FULLNAME  SNAME DEFAULT ''
);

CREATE TABLE ORG (
    ORGTYPE      STAG DEFAULT '',
    ORGNAME      SNAME NOT NULL,
    FULLNAME     SNAME,
    ALTNAME      SNAME,
    INN          SINT,
    DESCRIPTION  SDESCRIPTION,
    TAG          STAG,
    CREATED      STIMESTAMP,
    MODIFIED     STIMESTAMP,
    LOGO         SDATA,
    OWNER        SNAME
);

CREATE TABLE ORGPOSITION (
    NAME         SNAME NOT NULL,
    DESCRIPTION  SDESCRIPTION
);

CREATE TABLE ORGTYPE (
    VAL          STAG NOT NULL,
    DESCRIPTION  SDESCRIPTION DEFAULT ''
);

CREATE TABLE PART (
    ID           SID NOT NULL,
    CATEGORY     SNAME DEFAULT '',
    VENDOR       SNAME,
    PARTNO       SNAME NOT NULL,
    NAME         SNAME NOT NULL,
    DESCRIPTION  SDESCRIPTION,
    MEASUREUNIT  STAG DEFAULT '',
    CREATED      STIMESTAMP,
    MODIFIED     STIMESTAMP,
    WEIGHT       SNUMBER,
    WIDTH        SNUMBER,
    HEIGHT       SNUMBER,
    "LENGTH"     SNUMBER
);

CREATE TABLE PERSON (
    ID            SID NOT NULL,
    ORGNAME       SNAME DEFAULT '' NOT NULL,
    POSITIONNAME  SNAME DEFAULT '' NOT NULL,
    PERSONNAME    SNAME NOT NULL,
    EMAIL         SADDRESS,
    PHONE         SADDRESS,
    SITE          SADDRESS,
    TAG           STAG,
    CREATED       STIMESTAMP,
    MODIFIED      STIMESTAMP,
    DESCRIPTION   SDESCRIPTION,
    NOTES         STEXT
);

CREATE TABLE PRICE (
    ID        SID NOT NULL,
    PARTNAME  SNAME DEFAULT '' NOT NULL,
    ORGNAME   SNAME DEFAULT '' NOT NULL,
    CURRENCY  SNAME DEFAULT 'р.' NOT NULL,
    PRICE     SNUMBER DEFAULT 0 NOT NULL,
    CREATED   STIMESTAMP,
    MODIFIED  STIMESTAMP,
    SRC       SADDRESS,
    NOTES     SDESCRIPTION
);

CREATE TABLE PROJECT (
    NAME         SNAME NOT NULL,
    SELLERORG    SNAME DEFAULT '' NOT NULL,
    DESCRIPTION  SDESCRIPTION,
    CREATED      STIMESTAMP,
    MODIFIED     STIMESTAMP,
    VAT          SINT DEFAULT 0 NOT NULL,
    STAGE        STAG DEFAULT 'Проект'
);

CREATE TABLE REQUEST (
    ID           SID NOT NULL,
    PROJECTNAME  SNAME,
    NAME         SNAME DEFAULT '' NOT NULL,
    DESCRIPTION  SDESCRIPTION DEFAULT '',
    CREATED      STIMESTAMP,
    MODIFIED     STIMESTAMP,
    SALETYPE     SNAME DEFAULT '' NOT NULL,
    ORG          SNAME DEFAULT '' NOT NULL,
    VAT          SINT DEFAULT 0 NOT NULL,
    STAGE        STAG DEFAULT 'Проект'
);

CREATE TABLE REQUESTCURRENCYRATE (
    ID         SID NOT NULL,
    REQUESTID  SID NOT NULL,
    CURRENCY   SNAME DEFAULT 'р.' NOT NULL,
    VAL        SNUMBER DEFAULT 1
);

CREATE TABLE SALETYPE (
    NAME         SNAME NOT NULL,
    DESCRIPTION  SDESCRIPTION
);

CREATE TABLE SPECIFICATION (
    ID         SID NOT NULL,
    REQUESTID  SID NOT NULL,
    LINENO     SINT,
    PARTNAME   SNAME NOT NULL,
    QTY        SNUMBER,
    PRICEID    SINT,
    PRICE      SNUMBER,
    DISCOUNT   SNUMBER,
    VAT        SINT NOT NULL,
    COST       COMPUTED BY (price),
    TAG        STAG,
    NOTES      SDESCRIPTION,
    CREATED    STIMESTAMP,
    MODIFIED   STIMESTAMP
);

CREATE TABLE STAGE (
    NAME         STAG NOT NULL,
    DESCRIPTION  SDESCRIPTION
);

CREATE TABLE VALIDCURRENCY (
    CURRENCYSYMBOL  STAG NOT NULL,
    NAME            STAG NOT NULL,
    DEFAULTRATE     SNUMBER DEFAULT 1
);

CREATE TABLE VAT (
    VAL   SINT NOT NULL,
    NAME  SNAME
);

CREATE TABLE VENDOR (
    NAME         SNAME NOT NULL,
    DESCRIPTION  SDESCRIPTION
);



/******************************************************************************/
/***                           Unique constraints                           ***/
/******************************************************************************/

ALTER TABLE PART ADD CONSTRAINT UNQ1_PART_NAME UNIQUE (NAME);


/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE CATEGORY ADD CONSTRAINT PK_CATEGORY PRIMARY KEY (NAME);
ALTER TABLE MEASUREUNIT ADD CONSTRAINT PK_MEASUREUNIT PRIMARY KEY (NAME);
ALTER TABLE ORG ADD CONSTRAINT PK_ORG PRIMARY KEY (ORGNAME);
ALTER TABLE ORGPOSITION ADD CONSTRAINT PK_ORGPOSITION PRIMARY KEY (NAME);
ALTER TABLE ORGTYPE ADD CONSTRAINT PK_ORGTYPE PRIMARY KEY (VAL);
ALTER TABLE PART ADD CONSTRAINT PK_PART PRIMARY KEY (ID);
ALTER TABLE PERSON ADD CONSTRAINT PK_PERSON PRIMARY KEY (ID);
ALTER TABLE PRICE ADD CONSTRAINT PK_PRICE PRIMARY KEY (ID);
ALTER TABLE PROJECT ADD CONSTRAINT PK_PROJECT PRIMARY KEY (NAME);
ALTER TABLE REQUEST ADD CONSTRAINT PK_REQUEST PRIMARY KEY (ID);
ALTER TABLE REQUESTCURRENCYRATE ADD CONSTRAINT PK_REQUESTCURRENCYRATE PRIMARY KEY (ID);
ALTER TABLE SALETYPE ADD CONSTRAINT PK_SALETYPE PRIMARY KEY (NAME);
ALTER TABLE SPECIFICATION ADD CONSTRAINT PK_SPECIFICATION PRIMARY KEY (ID);
ALTER TABLE STAGE ADD CONSTRAINT PK_STAGE PRIMARY KEY (NAME);
ALTER TABLE VALIDCURRENCY ADD CONSTRAINT PK_VALIDCURRENCY PRIMARY KEY (CURRENCYSYMBOL);
ALTER TABLE VAT ADD CONSTRAINT PK_VAT PRIMARY KEY (VAL);
ALTER TABLE VENDOR ADD CONSTRAINT PK_VENDOR PRIMARY KEY (NAME);


/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/

ALTER TABLE ORG ADD CONSTRAINT FK_ORG_ORGTYPE FOREIGN KEY (ORGTYPE) REFERENCES ORGTYPE (VAL) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ORG ADD CONSTRAINT FK_ORG_OWNER FOREIGN KEY (OWNER) REFERENCES ORG (ORGNAME) ON DELETE SET NULL ON UPDATE SET NULL;
ALTER TABLE PART ADD CONSTRAINT FK_PART_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES CATEGORY (NAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PART ADD CONSTRAINT FK_PART_MEASUREUNIT FOREIGN KEY (MEASUREUNIT) REFERENCES MEASUREUNIT (NAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PART ADD CONSTRAINT FK_PART_VENDOR FOREIGN KEY (VENDOR) REFERENCES VENDOR (NAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PERSON ADD CONSTRAINT FK_PERSON_ORGNAME FOREIGN KEY (ORGNAME) REFERENCES ORG (ORGNAME) ON DELETE CASCADE ON UPDATE CASCADE
  USING INDEX FK_PERSON_1;
ALTER TABLE PERSON ADD CONSTRAINT FK_PERSON_POSITIONNAME FOREIGN KEY (POSITIONNAME) REFERENCES ORGPOSITION (NAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PRICE ADD CONSTRAINT FK_PRICE_CURRENCY FOREIGN KEY (CURRENCY) REFERENCES VALIDCURRENCY (CURRENCYSYMBOL) ON DELETE SET DEFAULT ON UPDATE SET DEFAULT
  USING INDEX FK_PRICE_CURRENCY_IDX;
ALTER TABLE PRICE ADD CONSTRAINT FK_PRICE_NAME FOREIGN KEY (PARTNAME) REFERENCES PART (NAME) ON DELETE SET DEFAULT ON UPDATE SET DEFAULT;
ALTER TABLE PRICE ADD CONSTRAINT FK_PRICE_ORGNAME FOREIGN KEY (ORGNAME) REFERENCES ORG (ORGNAME) ON DELETE SET DEFAULT ON UPDATE SET DEFAULT;
ALTER TABLE PROJECT ADD CONSTRAINT FK_PROJECT_STAGE FOREIGN KEY (STAGE) REFERENCES STAGE (NAME) ON DELETE SET DEFAULT ON UPDATE SET DEFAULT;
ALTER TABLE PROJECT ADD CONSTRAINT FK_PROJECT_VAT FOREIGN KEY (VAT) REFERENCES VAT (VAL) ON DELETE CASCADE ON UPDATE CASCADE
  USING INDEX FK_PROJECT_VAT_IDX;
ALTER TABLE REQUEST ADD CONSTRAINT FK_REQUEST_1 FOREIGN KEY (STAGE) REFERENCES STAGE (NAME) ON DELETE SET DEFAULT ON UPDATE SET DEFAULT;
ALTER TABLE REQUEST ADD CONSTRAINT FK_REQUEST_ORG FOREIGN KEY (ORG) REFERENCES ORG (ORGNAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE REQUEST ADD CONSTRAINT FK_REQUEST_PROJECT FOREIGN KEY (PROJECTNAME) REFERENCES PROJECT (NAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE REQUEST ADD CONSTRAINT FK_REQUEST_SALETYPE FOREIGN KEY (SALETYPE) REFERENCES SALETYPE (NAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE REQUEST ADD CONSTRAINT FK_REQUEST_VAT FOREIGN KEY (VAT) REFERENCES VAT (VAL) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPECIFICATION ADD CONSTRAINT FK_SPECIFICATION_PART FOREIGN KEY (PARTNAME) REFERENCES PART (NAME) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPECIFICATION ADD CONSTRAINT FK_SPECIFICATION_PRICEID FOREIGN KEY (PRICEID) REFERENCES PRICE (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPECIFICATION ADD CONSTRAINT FK_SPECIFICATION_REQUESTID FOREIGN KEY (REQUESTID) REFERENCES REQUEST (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SPECIFICATION ADD CONSTRAINT FK_SPECIFICATION_VAT FOREIGN KEY (VAT) REFERENCES VAT (VAL) ON DELETE CASCADE ON UPDATE CASCADE;


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE UNIQUE INDEX ORGTYPE_IDX_VALUE ON ORGTYPE (VAL);
CREATE INDEX PERSON_IDX_POSITION_NAME ON PERSON (POSITIONNAME);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: ORG_BI_CREATED */
CREATE TRIGGER ORG_BI_CREATED FOR ORG
ACTIVE BEFORE INSERT POSITION 0
AS
begin
    NEW.created = current_timestamp;
    NEW.modified = current_timestamp;
end
^

/* Trigger: ORG_BU_MODIFIED */
CREATE TRIGGER ORG_BU_MODIFIED FOR ORG
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  NEW.modified = current_timestamp;
end
^

/* Trigger: PART_BI */
CREATE TRIGGER PART_BI FOR PART
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_part_id,1);
  NEW.created= current_timestamp;
  NEW.modified = current_timestamp;
end
^

/* Trigger: PART_BU0 */
CREATE TRIGGER PART_BU0 FOR PART
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  NEW.modified = current_timestamp;
end
^

/* Trigger: PERSON_BI_CREATED */
CREATE TRIGGER PERSON_BI_CREATED FOR PERSON
ACTIVE BEFORE INSERT POSITION 0
AS
begin
    if (new.id is null) then begin
        new.id = gen_id(gen_person_id,1);
    end
    NEW.created = current_timestamp;
    NEW.modified = current_timestamp;
end
^

/* Trigger: PERSON_BU_MODIFIED */
CREATE TRIGGER PERSON_BU_MODIFIED FOR PERSON
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
    NEW.modified = current_timestamp;
end
^

/* Trigger: PRICE_BI0 */
CREATE TRIGGER PRICE_BI0 FOR PRICE
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  NEW.created = current_timestamp;
  NEW.modified = current_timestamp;
end
^

/* Trigger: PRICE_BU_MODIFIED */
CREATE TRIGGER PRICE_BU_MODIFIED FOR PRICE
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  NEW.modified = current_timestamp;
end
^

/* Trigger: PROJECT_BI_CREATED */
CREATE TRIGGER PROJECT_BI_CREATED FOR PROJECT
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  NEW.created = current_timestamp;
  NEW.modified = current_timestamp;
end
^

/* Trigger: PROJECT_BU0 */
CREATE TRIGGER PROJECT_BU0 FOR PROJECT
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  NEW.modified = current_timestamp;
end
^

/* Trigger: REQUESTCURRENCYRATE_BI */
CREATE TRIGGER REQUESTCURRENCYRATE_BI FOR REQUESTCURRENCYRATE
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_requestcurrencyrate_id,1);
end
^

/* Trigger: REQUEST_AI0 */
CREATE TRIGGER REQUEST_AI0 FOR REQUEST
ACTIVE AFTER INSERT POSITION 0
AS
    declare variable requestid SID;
begin
    :requestid = new.id;
    insert into requestcurrencyrate (requestid, currency, val)
    select :requestid,  v.currencysymbol, v.defaultrate from validcurrency v;
end
^

/* Trigger: REQUEST_BD0 */
CREATE TRIGGER REQUEST_BD0 FOR REQUEST
ACTIVE BEFORE DELETE POSITION 0
AS
begin
    delete from requestcurrencyrate r where r.requestid = old.id;
end
^

/* Trigger: REQUEST_BI_CREATED */
CREATE TRIGGER REQUEST_BI_CREATED FOR REQUEST
ACTIVE BEFORE INSERT POSITION 0
AS
declare variable vat sint;
begin
    if (new.id is null) then
    begin
        new.id = gen_id(gen_request_id,1);
    end
    NEW.created = current_timestamp;
    NEW.modified = current_timestamp;
    if (new.vat is null) then
    begin
        select p.vat from project p where p.name = NEW.projectname into :vat;
        if (:vat is not null) then
        begin
            new.vat = :vat;
        end
    end
end
^

/* Trigger: REQUEST_BU0 */
CREATE TRIGGER REQUEST_BU0 FOR REQUEST
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  NEW.modified = current_timestamp;
end
^

/* Trigger: SPECIFICATION_BI */
CREATE TRIGGER SPECIFICATION_BI FOR SPECIFICATION
ACTIVE BEFORE INSERT POSITION 0
as
declare variable vat sint;
begin
    if (new.id is null) then
        new.id = gen_id(gen_specification_id,1);
    NEW.created = current_timestamp;
    NEW.modified = current_timestamp;
    if (new.vat is null) then
    begin
        select r.vat from request r where r.id = NEW.requestid into :vat;
        if (:vat is not null) then
        begin
            new.vat = :vat;
        end
    end
end
^

/* Trigger: VAT_BI */
CREATE TRIGGER VAT_BI FOR VAT
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.val is null) then
    new.val = gen_id(gen_vat_id,1);
end
^
SET TERM ; ^



/******************************************************************************/
/***                              Descriptions                              ***/
/******************************************************************************/

COMMENT ON DOMAIN SADDRESS IS
'e-mail, URI';

COMMENT ON DOMAIN SCODE IS
'Код';

COMMENT ON DOMAIN SDATA IS
'Данные';

COMMENT ON DOMAIN SDESCRIPTION IS
'Описание';

COMMENT ON DOMAIN SID IS
'идентификатор';

COMMENT ON DOMAIN SINT IS
'Целое число';

COMMENT ON DOMAIN SNAME IS
'Название';

COMMENT ON DOMAIN SNUMBER IS
'Число';

COMMENT ON DOMAIN STAG IS
'Короткий тег';

COMMENT ON DOMAIN STEXT IS
'Текст';

COMMENT ON DOMAIN STIMESTAMP IS
'Дата и время';



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

COMMENT ON COLUMN CATEGORY.NAME IS
'Название';

COMMENT ON COLUMN CATEGORY.PARENT IS
'Название родительской категории';

COMMENT ON COLUMN CATEGORY.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN MEASUREUNIT.NAME IS
'Название';

COMMENT ON COLUMN ORG.ORGTYPE IS
'Тип организации или форма собственности';

COMMENT ON COLUMN ORG.ORGNAME IS
'Короткое название';

COMMENT ON COLUMN ORG.FULLNAME IS
'Полное название';

COMMENT ON COLUMN ORG.ALTNAME IS
'Название';

COMMENT ON COLUMN ORG.INN IS
'Целое число';

COMMENT ON COLUMN ORG.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN ORG.TAG IS
'Короткий тег';

COMMENT ON COLUMN ORG.CREATED IS
'Дата и время создания записи';

COMMENT ON COLUMN ORG.MODIFIED IS
'Дата и время последнего изменения записи';

COMMENT ON COLUMN ORG.LOGO IS
'Логотип организации';

COMMENT ON COLUMN ORGPOSITION.NAME IS
'Название должности';

COMMENT ON COLUMN ORGPOSITION.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN ORGTYPE.VAL IS
'Значение';

COMMENT ON COLUMN ORGTYPE.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN PART.ID IS
'идентификатор';

COMMENT ON COLUMN PART.CATEGORY IS
'Название категории товаров';

COMMENT ON COLUMN PART.VENDOR IS
'Название';

COMMENT ON COLUMN PART.PARTNO IS
'Артикул';

COMMENT ON COLUMN PART.NAME IS
'Название';

COMMENT ON COLUMN PART.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN PART.MEASUREUNIT IS
'ед. измерения';

COMMENT ON COLUMN PART.CREATED IS
'Дата и время создания записи';

COMMENT ON COLUMN PART.MODIFIED IS
'Дата и время';

COMMENT ON COLUMN PART.WEIGHT IS
'Вес в кг';

COMMENT ON COLUMN PART.WIDTH IS
'Ширина, м';

COMMENT ON COLUMN PART.HEIGHT IS
'Высота, м';

COMMENT ON COLUMN PART."LENGTH" IS
'Длина, м';

COMMENT ON COLUMN PERSON.ID IS
'идентификатор';

COMMENT ON COLUMN PERSON.ORGNAME IS
'Название организации';

COMMENT ON COLUMN PERSON.POSITIONNAME IS
'Название должности';

COMMENT ON COLUMN PERSON.PERSONNAME IS
'ФИО';

COMMENT ON COLUMN PERSON.EMAIL IS
'e-mail, URI';

COMMENT ON COLUMN PERSON.PHONE IS
'Телефон';

COMMENT ON COLUMN PERSON.SITE IS
'URI';

COMMENT ON COLUMN PERSON.TAG IS
'Короткий тег';

COMMENT ON COLUMN PERSON.CREATED IS
'Дата и время создания записи';

COMMENT ON COLUMN PERSON.MODIFIED IS
'Дата и время последней модификации';

COMMENT ON COLUMN PERSON.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN PERSON.NOTES IS
'Текст';

COMMENT ON COLUMN PRICE.ID IS
'идентификатор';

COMMENT ON COLUMN PRICE.PARTNAME IS
'Название';

COMMENT ON COLUMN PRICE.ORGNAME IS
'Название';

COMMENT ON COLUMN PRICE.CURRENCY IS
'Название';

COMMENT ON COLUMN PRICE.PRICE IS
'Число';

COMMENT ON COLUMN PRICE.CREATED IS
'Дата и время';

COMMENT ON COLUMN PRICE.MODIFIED IS
'Дата и время';

COMMENT ON COLUMN PRICE.SRC IS
'Источник';

COMMENT ON COLUMN PRICE.NOTES IS
'Особые условия по обьему и времени';

COMMENT ON COLUMN PROJECT.NAME IS
'Название';

COMMENT ON COLUMN PROJECT.SELLERORG IS
'Кто';

COMMENT ON COLUMN PROJECT.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN REQUEST.ID IS
'идентификатор';

COMMENT ON COLUMN REQUEST.PROJECTNAME IS
'Название';

COMMENT ON COLUMN REQUEST.NAME IS
'Название';

COMMENT ON COLUMN REQUEST.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN REQUEST.CREATED IS
'Дата и время';

COMMENT ON COLUMN REQUEST.MODIFIED IS
'Дата и время';

COMMENT ON COLUMN REQUESTCURRENCYRATE.ID IS
'идентификатор';

COMMENT ON COLUMN REQUESTCURRENCYRATE.REQUESTID IS
'идентификатор';

COMMENT ON COLUMN REQUESTCURRENCYRATE.CURRENCY IS
'Валюта';

COMMENT ON COLUMN REQUESTCURRENCYRATE.VAL IS
'Курс в рублях';

COMMENT ON COLUMN SALETYPE.NAME IS
'Название';

COMMENT ON COLUMN SALETYPE.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN SPECIFICATION.ID IS
'идентификатор';

COMMENT ON COLUMN SPECIFICATION.REQUESTID IS
'идентификатор';

COMMENT ON COLUMN SPECIFICATION.LINENO IS
'Целое число';

COMMENT ON COLUMN SPECIFICATION.PARTNAME IS
'Название';

COMMENT ON COLUMN SPECIFICATION.QTY IS
'Название';

COMMENT ON COLUMN SPECIFICATION.PRICEID IS
'Целое число';

COMMENT ON COLUMN SPECIFICATION.PRICE IS
'Число';

COMMENT ON COLUMN SPECIFICATION.DISCOUNT IS
'Процент дисконта или надбавки';

COMMENT ON COLUMN SPECIFICATION.COST IS
'Стоимость позиции со скидкой(надбавкой) и НДС';

COMMENT ON COLUMN SPECIFICATION.TAG IS
'Короткий тег';

COMMENT ON COLUMN SPECIFICATION.NOTES IS
'Описание';

COMMENT ON COLUMN SPECIFICATION.CREATED IS
'Дата и время';

COMMENT ON COLUMN SPECIFICATION.MODIFIED IS
'Дата и время';

COMMENT ON COLUMN STAGE.NAME IS
'Состояние проекта или запроса';

COMMENT ON COLUMN STAGE.DESCRIPTION IS
'Описание';

COMMENT ON COLUMN VALIDCURRENCY.CURRENCYSYMBOL IS
'Короткий тег';

COMMENT ON COLUMN VALIDCURRENCY.NAME IS
'Короткий тег';

COMMENT ON COLUMN VAT.VAL IS
'Процент НДС';

COMMENT ON COLUMN VAT.NAME IS
'Название';

COMMENT ON COLUMN VENDOR.NAME IS
'Название';

COMMENT ON COLUMN VENDOR.DESCRIPTION IS
'Описание';

